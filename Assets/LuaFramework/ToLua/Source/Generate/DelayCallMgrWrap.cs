//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DelayCallMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DelayCallMgr), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Call", Call);
		L.RegFunction("Cancel", Cancel);
		L.RegFunction("Clear", Clear);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("instance", get_instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Call(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes<System.Action>(L, 3))
			{
				DelayCallMgr obj = (DelayCallMgr)ToLua.CheckObject<DelayCallMgr>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				System.Action arg1 = (System.Action)ToLua.ToObject(L, 3);
				obj.Call(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaFunction>(L, 3))
			{
				DelayCallMgr obj = (DelayCallMgr)ToLua.CheckObject<DelayCallMgr>(L, 1);
				float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
				LuaFunction arg1 = ToLua.ToLuaFunction(L, 3);
				obj.Call(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Action>(L, 4))
			{
				DelayCallMgr obj = (DelayCallMgr)ToLua.CheckObject<DelayCallMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				System.Action arg2 = (System.Action)ToLua.ToObject(L, 4);
				obj.Call(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaFunction>(L, 4))
			{
				DelayCallMgr obj = (DelayCallMgr)ToLua.CheckObject<DelayCallMgr>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
				LuaFunction arg2 = ToLua.ToLuaFunction(L, 4);
				obj.Call(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: DelayCallMgr.Call");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Cancel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DelayCallMgr obj = (DelayCallMgr)ToLua.CheckObject<DelayCallMgr>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.Cancel(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DelayCallMgr obj = (DelayCallMgr)ToLua.CheckObject<DelayCallMgr>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, DelayCallMgr.instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

