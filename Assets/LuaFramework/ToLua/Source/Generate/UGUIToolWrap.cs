//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UGUIToolWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UGUITool), typeof(System.Object));
		L.RegFunction("SetText", SetText);
		L.RegFunction("SetButton", SetButton);
		L.RegFunction("SetInputField", SetInputField);
		L.RegFunction("SetDropDown", SetDropDown);
		L.RegFunction("SetToggle", SetToggle);
		L.RegFunction("SetSlider", SetSlider);
		L.RegFunction("New", _CreateUGUITool);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUGUITool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UGUITool obj = new UGUITool();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UGUITool.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			PrefabBinder arg0 = (PrefabBinder)ToLua.CheckObject<PrefabBinder>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			string arg2 = ToLua.CheckString(L, 3);
			UnityEngine.UI.Text o = UGUITool.SetText(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetButton(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			PrefabBinder arg0 = (PrefabBinder)ToLua.CheckObject<PrefabBinder>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			System.Action<UnityEngine.GameObject> arg2 = (System.Action<UnityEngine.GameObject>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject>>(L, 3);
			UnityEngine.UI.Button o = UGUITool.SetButton(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInputField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			PrefabBinder arg0 = (PrefabBinder)ToLua.CheckObject<PrefabBinder>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			System.Action<string> arg2 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 3);
			UnityEngine.UI.InputField o = UGUITool.SetInputField(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDropDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			PrefabBinder arg0 = (PrefabBinder)ToLua.CheckObject<PrefabBinder>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			System.Action<int> arg2 = (System.Action<int>)ToLua.CheckDelegate<System.Action<int>>(L, 3);
			UnityEngine.UI.Dropdown o = UGUITool.SetDropDown(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetToggle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			PrefabBinder arg0 = (PrefabBinder)ToLua.CheckObject<PrefabBinder>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			System.Action<bool> arg2 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 3);
			UnityEngine.UI.Toggle o = UGUITool.SetToggle(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSlider(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			PrefabBinder arg0 = (PrefabBinder)ToLua.CheckObject<PrefabBinder>(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			System.Action<float> arg2 = (System.Action<float>)ToLua.CheckDelegate<System.Action<float>>(L, 3);
			UnityEngine.UI.Slider o = UGUITool.SetSlider(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

